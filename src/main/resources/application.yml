#mybatis-plus映射mapper文件
#mybatis-plus:
#  mapper-locations: classpath:mappers/*.xml
#  type-aliases-package: cn.darkjrong.submeter.common.pojo.entity

spring:
  main:
    allow-bean-definition-overriding: true

  jpa:
    hibernate:
      ddl-auto: update
    database: mysql

  shardingsphere:
    datasource:
#      names: m1,m1s1,m1s2,m2,m2s1,m2ms2
      names: m1,m1s1,m1s2
      m1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.42.133:4406/demo?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true
        username: root
        password: 123456
#        # 定义初始连接数
#        initialSize: 1
#        # 定义最小空闲 minIdle=1
#        minIdle: 3
#        # 定义最大连接数
#        maxActive: 100
#        # 配置获取连接等待超时的时间
#        maxWait: 60000
#        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#        timeBetweenEvictionRunsMillis: 60000
#        # 配置一个连接在池中最小生存的时间，单位是毫秒
#        minEvictableIdleTimeMillis: 30000
#        # 验证使用的SQL语句
#        validationQuery: select 'x'
#        # 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
#        testWhileIdle: true
#        # 借出连接时不要测试，否则很影响性能
#        testOnBorrow: false
#        # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
#        testOnReturn: false
#        # 打开PSCache，并且指定每个连接上PSCache的大小
#        poolPreparedStatements: true
#        # 指定每个连接上PSCache的大小
#        maxPoolPreparedStatementPerConnectionSize: 20
#        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#        filters: stat,wall,slf4j
#        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

      m1s1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.42.133:5506/demo?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true
        username: root
        password: 123456
#        # 定义初始连接数
#        initialSize: 1
#        # 定义最小空闲 minIdle=1
#        minIdle: 3
#        # 定义最大连接数
#        maxActive: 100
#        # 配置获取连接等待超时的时间
#        maxWait: 60000
#        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#        timeBetweenEvictionRunsMillis: 60000
#        # 配置一个连接在池中最小生存的时间，单位是毫秒
#        minEvictableIdleTimeMillis: 30000
#        # 验证使用的SQL语句
#        validationQuery: select 'x'
#        # 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
#        testWhileIdle: true
#        # 借出连接时不要测试，否则很影响性能
#        testOnBorrow: false
#        # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
#        testOnReturn: false
#        # 打开PSCache，并且指定每个连接上PSCache的大小
#        poolPreparedStatements: true
#        # 指定每个连接上PSCache的大小
#        maxPoolPreparedStatementPerConnectionSize: 20
#        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#        filters: stat,wall,slf4j
#        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

      m1s2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.42.133:5507/demo?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true
        username: root
        password: 123456
#        # 定义初始连接数
#        initialSize: 1
#        # 定义最小空闲 minIdle=1
#        minIdle: 3
#        # 定义最大连接数
#        maxActive: 100
#        # 配置获取连接等待超时的时间
#        maxWait: 60000
#        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#        timeBetweenEvictionRunsMillis: 60000
#        # 配置一个连接在池中最小生存的时间，单位是毫秒
#        minEvictableIdleTimeMillis: 30000
#        # 验证使用的SQL语句
#        validationQuery: select 'x'
#        # 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
#        testWhileIdle: true
#        # 借出连接时不要测试，否则很影响性能
#        testOnBorrow: false
#        # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
#        testOnReturn: false
#        # 打开PSCache，并且指定每个连接上PSCache的大小
#        poolPreparedStatements: true
#        # 指定每个连接上PSCache的大小
#        maxPoolPreparedStatementPerConnectionSize: 20
#        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#        filters: stat,wall,slf4j
#        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

#      m2:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://192.168.42.133:14406/demo?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true
#        username: root
#        password: 123456
#      m2s1:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://192.168.42.133:15506/demo?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true
#        username: root
#        password: 123456
#      m2s2:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://192.168.42.133:15507/demo?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true
#        username: root
#        password: 123456

    props:
      sql:
        show: true #打印sql日志

    sharding:
      # 主从规则
      masterSlaveRules:
        ds0:
          name: ms1
          master-data-source-name: m1
          slave-data-source-names: m1s1, m1s2
          load-balance-algorithm-type: round_robin
#        ds1:
#          name: ms2
#          master-data-source-name: m2
#          slave-data-source-names: m2s1, m2s2
#          load-balance-algorithm-type: round_robin


      tables:
        # 单库分表
        t_user:
          actual-data-nodes: ds0.t_user_$->{2021..2099}0$->{1..9},ds0.t_user_$->{2021..2099}1$->{0..2}

          key-generator:
            column: id
            type: SNOWFLAKE

          # 指定分片策略
          table-strategy:
            standard:
              sharding-column: birthday
              preciseAlgorithmClassName: cn.darkjrong.submeter.algorithm.ShardingAlgorithm

      create-table-rules:
        rules:
          t_user:
            timeFormat: YYYY_MM
#            accurateFormat: 1,2,3,4
#            rangeFormat: 1-3
            tableSql: "CREATE TABLE `t_user`  (`id` bigint(20) NOT NULL AUTO_INCREMENT,
                          `nickname` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
                          `password` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
                          `sex` int(11) NULL DEFAULT NULL,
                          `birthday` bigint(20) NULL DEFAULT NULL,
                          PRIMARY KEY (`id`) USING BTREE
                          ) ENGINE = InnoDB AUTO_INCREMENT = 18 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;"










